<launch>

  <!-- Learning from demonstration -->
  <!-- =========================== -->

  <!-- DMP server: https://github.com/cmower/dmp -->
  <node name="dmp" pkg="dmp" type="dmp_server" respawn="false" output="screen"/>


  <!-- Human interface -->
  <!-- =============== -->

  <!-- Keyboard driver -->
  <node pkg="keyboard" name="keyboard" type="keyboard"/>

  <!-- Map keyboard to sensor_msgs/Joy messages -->
  <node pkg="operator_node" name="keyboard_to_joy" type="keyboard_to_joy.py">
    <rosparam param="config" file="$(find rpbi_examples)/configs/lfd/keyboard_to_joy.yaml"/>
  </node>

  <!-- Map raw keyboard commands (sensor_msgs/Joy messages) to operator signal -->
  <node pkg="operator_node" name="keyboard_scale" type="isometric_node.py">
    <rosparam param="config" file="$(find rpbi_examples)/configs/lfd/keyboard_scale.yaml"/>
    <param name="start_on_init" type="bool" value="false"/>
  </node>

  <!-- Teleoperation -->
  <!-- ============= -->

  <!-- Specify origin for IK target-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="teleop_origin_broadcaster" args="-0.4 0. 0.17 0 0 3.14159 rpbi/world teleop_origin"/>

  <!-- Teleop transform -->
  <node pkg="teleop" type="teleop_tf_node.py" name="teleop_tf" output="screen">
    <rosparam param="config" file="$(find rpbi_examples)/configs/lfd/teleop.yaml"/>
    <param name="start_on_init" type="bool" value="false"/>
  </node>

  <!-- IK -->
  <!-- == -->

  <!-- Setup IK -->
  <node pkg="ik_ros" name="ik_setup" type="ik_setup_node.py" args="trac_ik" output="screen">
    <param name="parent_frame_id" type="str" value="rpbi/kuka_lwr/lwr_arm_0_link"/>
    <param name="child_frame_id" type="str" value="teleop_target"/>
    <param name="start_on_init" type="bool" value="false"/>
    <param name="init_brx" type="double" value="10.0"/>
    <param name="init_bry" type="double" value="10.0"/>
    <param name="init_brz" type="double" value="10.0"/>
    <remap from="ik/setup/trac_ik/qinit" to="rpbi/kuka_lwr/joint_states"/>
  </node>

  <!-- IK solver interface -->
  <node pkg="ik_ros" name="ik_node" type="ik_solver_node.py" args="trac_ik" output="screen">
    <param name="urdf_filename" type="string" value="{ik_ros_examples}/robots/kuka_lwr.urdf"/>
    <param name="tip_link" type="string" value="end_effector_ball"/>
    <param name="base_link" type="string" value="lwr_arm_0_link"/>
    <param name="start_on_init" type="bool" value="false"/>
    <remap from="joint_states/target" to="rpbi/kuka_lwr/joint_states/target"/>
  </node>

  <!-- Simulation -->
  <!-- ========== -->

  <!-- ROS-Pybullet interface node simulator -->
  <node pkg="ros_pybullet_interface" name="ros_pybullet_interface_node" type="ros_pybullet_interface_node.py">
    <rosparam param="config" file="$(find rpbi_examples)/configs/lfd/config.yaml"/>
  </node>

  <!-- Static transforms -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="visual_goal_tf"
	args="-0.75 -0.15 0.1 0 0 0 rpbi/world rpbi/visual_goal"/>

  <!-- Visualization -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find ik_ros_examples)/rviz/kuka_lwr_example.rviz" />

  <!-- Run example -->
  <!-- =========== -->

  <node pkg="rpbi_examples" name="run" type="run_lfd.py" output="screen"/>

</launch>
