<launch>

  <!-- Launch ROS-PyBullet interface node -->
  <node
      name="ros_pybullet_interface"
      pkg="ros_pybullet_interface"
      type="ros_pybullet_interface_node.py"
      clear_params="true"
      output="screen">

    <!-- Pybullet simulation config (required) -->
    <!-- Flag to indicate how bullet simulation step is
         synced with ROS control loop.
         Options:
              true:  pybullet executes all simulation steps in a fixed frequency
                     This can be used to simulate real world
                     ( use simulation freqency > 250 Hz)
              false: pybullet executes every simulation step when commanded by ROS node
                     This can be used to execute one simulation step after one control/interface step
                     Useful for debugging, but not realistic
                     (specially, if control loop freqency is < 250 Hz)-->
    <param
        name="pybullet_sim_infloop"
        value="true"
        type="bool"/>

    <!-- Robot config (required) -->
    <param
        name="robot_config"
        value="configs/kuka.yaml"
        type="str"/>

    <!-- Camera config (required) -->
    <param
        name="camera_config"
        value="configs/camera.yaml"
        type="str"/>

    <!-- List collision objects (optional) -->
    <rosparam param="collision_object_config_file_names">
      [
      'configs/sphere.yaml',
      ]
    </rosparam>


  </node>

  <!-- PyRBDL4dIK Environmet node (receiver - publisher) -->
  <node
      name="ros_PyRBDL4dIK_interface"
      pkg="ros_pybullet_interface"
      type="ros_rbdl_IK_interace_node.py"
      output="screen">

    <param
        name="robot_config"
        value="configs/kuka.yaml"
        type="str"/>

  </node>

  <!-- Testing node cartesian poistions (publisher) -->
  <node
      name="test_ros_rbdlIK_interface"
      pkg="ros_pybullet_interface"
      type="test_ros_rbdlIK_interface.py"
      output="screen">

    </node>

</launch>
