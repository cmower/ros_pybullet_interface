<launch>


  <!-- Launch ROS-PyBullet interface -->
  <node
      name="ros_pybullet_interface"
      pkg="ros_pybullet_interface"
      type="ros_pybullet_interface_node.py"
      clear_params="true"
      output="screen">

    <!-- Pybullet simulation config (required) -->
    <!-- Flag to indicate how bullet simulation step is
         synced with ROS control loop.
         Options:
              true:  pybullet executes all simulation steps in a fixed frequency
                     This can be used to simulate real world
                     ( use simulation freqency > 250 Hz)
              false: pybullet executes every simulation step when commanded by ROS node
                     This can be used to execute one simulation step after one control/interface step
                     Useful for debugging, but not realistic
                     (specially, if control loop freqency is < 250 Hz)-->
    <param
        name="pybullet_sim_self_loop"
        value="True"
        type="bool"/>

    <param
        name="Z_gravity"
        value="0"
        type="double"/>

    <!-- Robot config (required) -->
    <param
        name="robot_config"
        value="configs/kuka_push.yaml"
        type="str"/>

    <!-- Camera config (required) -->
    <param
        name="camera_config"
        value="configs/camera.yaml"
        type="str"/>


    <!-- List visual objects (optional) -->
    <rosparam param="visual_object_config_file_names">
      [
      'configs/target_obj_visual.yaml',
      ]
    </rosparam>

    <!-- List objects (optional) -->
    <rosparam param="object_config_file_names">
      [
      'configs/target_obj.yaml',
      ]
    </rosparam>


  </node>


  <node
      name="ros_traj_consum_interpol_interface2"
      pkg="ros_pybullet_interface"
      type="ros_traj_consum_interpol_interface_node.py"
      output="screen">

    <!-- Traj config (required) -->
    <param
        name="traj_config"
        value="configs/traj_object3D_freemotion_Quat.yaml"
        type="str"/>

  </node>


  <!-- Testing node trajectory publisher -->
  <node name="test_ros_HybridTO_interpol_interface"
      pkg="ros_pybullet_interface"
      type="test_ros_HybridTO_interpol_interface.py"
      output="screen">

<!--      <param-->
<!--          name="rotation_repr"-->
<!--          value="Quat"-->
<!--          type="str"/>-->

  </node>











</launch>
